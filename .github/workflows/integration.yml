name: CI
on: [push, pull_request]

jobs:
  PHP82-alpine:
    name: PHP 8.2 Alpine 3.16
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Build extension"
        run: "docker build -t simdjsontest -f docker_php8.2-alpine ."

      - name: "Show"
        run: "docker run --rm --env SIMDJSON_HIGH_MEMORY_TESTS=1 simdjsontest php --ri simdjson"

  PHP81-alpine:
    name: PHP 8.1 Alpine 3.15
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Build extension"
        run: "docker build -t simdjsontest -f docker_php8.1-alpine ."

      - name: "Show"
        run: "docker run --rm --env SIMDJSON_HIGH_MEMORY_TESTS=1 simdjsontest php --ri simdjson"

  PHP80-alpine:
    name: PHP 8.0 Alpine 3.12
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Build extension"
        run: "docker build -t simdjsontest -f docker_php8.0-alpine ."

      - name: "Show"
        run: "docker run --rm --env SIMDJSON_HIGH_MEMORY_TESTS=1 simdjsontest php --ri simdjson"

  PHP74-alpine:
    name: PHP 7.4 Alpine 3.12
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Build extension"
        run: "docker build -t simdjsontest -f docker_php7.4-alpine ."

      - name: "Show"
        run: "docker run --rm --env SIMDJSON_HIGH_MEMORY_TESTS=1 simdjsontest php --ri simdjson"

  PHP73-alpine:
    name: PHP 7.3 Alpine 3.12
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Build extension"
        run: "docker build -t simdjsontest -f docker_php7.3-alpine ."

      - name: "Show"
        run: "docker run --rm --env SIMDJSON_HIGH_MEMORY_TESTS=1 simdjsontest php --ri simdjson"

  PHP72-alpine:
    name: PHP 7.2 Alpine 3.12
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Build extension"
        run: "docker build -t simdjsontest -f docker_php7.2-alpine ."

      - name: "Show"
        run: "docker run --rm --env SIMDJSON_HIGH_MEMORY_TESTS=1 simdjsontest php --ri simdjson"

  PHP71-alpine:
    name: PHP 7.1 Alpine 3.10
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Build extension"
        run: "docker build -t simdjsontest -f docker_php7.1-alpine ."

      - name: "Show"
        run: "docker run --rm --env SIMDJSON_HIGH_MEMORY_TESTS=1 simdjsontest php --ri simdjson"

  Ubuntu:
    strategy:
      fail-fast: false
      matrix:
        php-version:
          - "7.0"
          - "7.1"
          - "7.2"
          - "7.3"
          - "7.4"
          - "8.0"
          - "8.1"
        os: [ubuntu-latest]
        experimental: [false]
    runs-on: ${{ matrix.os }}
    name: PHP ${{ matrix.php-version }} Test on ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Install PHP"
        uses: shivammathur/setup-php@v2
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: json
          # for correct php-config extension dir, see https://github.com/shivammathur/setup-php/issues/147
          tools: pecl, phpize, php-config
      - name: "Build extension"
        run: |
          export NO_INTERACTION=true
          export REPORT_EXIT_STATUS=1
          export SIMDJSON_HIGH_MEMORY_TESTS=1
          php-config --extension-dir
          phpize
          ./configure
          make
          sudo make install
          make test TESTS="--show-diff" || exit 1

      - name: "Show"
        run: "php -dextension=simdjson.so --ri simdjson"

      - name: "Error log"
        if: ${{ failure() }}
        run: "ls -1t tests/*.log | xargs -d'\n' cat"

      - name: "Error diff"
        if: ${{ failure() }}
        run: |
          for FILE in $(find tests -name '*.diff'); do
            echo $FILE
            cat $FILE
            echo
          done
